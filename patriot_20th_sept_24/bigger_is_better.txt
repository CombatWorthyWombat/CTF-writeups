we are given the following:
a file titled: "bigger_is_better.txt"
and a little bit of text: "bigger is better, or so i've heard"
===========================================================================
we are given the following values:

n = 20305605772088142254079724960884486005748847015497427301575410293505817279910746556529376931600618579467120276350191887301067237559338164615341364063895698445198450602100622547416422520569435203138576780851363672762744455872440594076326813879006337922017621673305730465334708327073147244529163919113400850500409784670385009784210553996344093407282702258367726551292949276478302283365758654388095557202147107693063638232912598498439805960866571776128157562869249540687561326901969851229705248157494412716795536617485874928328884253043159166953971992309846319441730059436713807550503780907287938041242764808454486287023
e = 11482685017819657772146196533057795733473449629855289693100164822097723844966138177362511509772380353831218660693991845555704097147035306958570110974439828105301049643719991559075905686792619567403740919201379127416674307003242767236082047328240271052874236417166735391996411110944467555336448767975263755538261304581405836813138939268114431131030122076716110715178499142704121740475206968272546304252509000120167141777229963404829961350506433927568085505890377296146907922613025051900945495785850823000233847703348763563935446095561235796206511113603398775388472794084369294787467785140078624603886943660133858662073
C = 14531665134114167100979837826752342028891450735196995677636357769295865614666559933494564785156988282683425867538070343091701676024659802732068652721583634562927719841530261965002797455986557324485535150988712817607148213596012867495441913039874954586582711201328787601881545464712275113969203389652205083501245059792154793119468153650644663596094313386931963669611066891546631181901326785976138953854826637304180664070190483908587086086528278431012978756396240661945644492612350098787059899072364888105545382998691878881197718078741483487137826986723167593340766546454020829394951911243295040065262047943870970224586

the values above denote that this is likley an RSA encrypted message:

**n = p*q** the product of the two primes

**e** = the public key exponent, used in the encrypt function

**c** = the encrypted message, this is not RSA specific notation

first thing to notice (given how hard they are trying to talk about something "big"), is that the **e** value is very large

given that **e** is used in generating the decrypt function; **d** as follows:

**1/e*lamda(n)**

large values of **e** lead to smaller and smaller values of **d**, making it vulnerable to certain types of attack

brute force iteration of integers becomes possible when the public key is known to be large, as **d** will be proportionally small

however, we can use a more targeted and sucessful method called "wiener's attack"
an in depth description on how this works is beyond the scope of the challenge, i do plan to make a glossary and explain it in the future

for the moment, large **e** = weak **e**
===========================================================================
run wiener's attack to generate **d**
**d** = 6790868203158235630829276584520781742736789439092826195998797654123576347733572735958718971497900958255627200126351007473832666320814528828633214007567537

as: **m is congruent to c^d**
we can calculate: **m** -> 198573282289942360340715068182867171639965772069914565630203355812652530045

try decimal -> unicode -> gibberish
try decimal -> ascii -> also gibberish
try decimal -> hex -> hextext -> **pctf{fun_w1th_l4tt1c3s_f039ab9}**
